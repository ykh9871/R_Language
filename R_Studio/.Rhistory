rm(list = ls())
rm(list = ls())
x<-2*pi
x
rm(x)
ls()
rm(list = ls())
x<-10
y<-50
z<-c("three","blind","mice")
f<-function(n,p)sqrt(p*n)
ls()
ls.str()
x<-2*pi
x
[1]6.283185
x<-2*pi
x<-[1]6.283185
[1]6.283185
rm(x)
ls()
rm(list = ls())
x<-2*pi
x
rm(x)
ls()
c(1*pi, 2*pi, 3*pi)
c("everone", "loves", "R")
C(TRUE, TRUE, TRUE, TRUE)
C(TRUE, TRUE, FALSE, TRUE)
v1<-c(1,2,3)
v2<-c(4,5,6)
c(v1,v2)
v3<-c("A","B","C")
c(v1,v3)
mode(3.1415)
1:5
9:0
seq(from=1, to=5, by=2)
rep(1, times=5)
s <- as.Date("2015-01-01")
e <- as.date("2015-01-15")
e <- as.Date("2015-01-15")
seq(s,e,1)
seq(from=s,by=1,length.out=7)
a <- 3
a==pi
a!=pi
a<pi
a>pi
a<=pi
a>=pi
fib <- c(0,1,1,2,3,5,8,13,21,34)
fib
fib[1] 첫 번째 원소는 1이다
fib[2]
fib[1]
fib[2]
fib[3]
fib[1:3]
fib[c(1,2,4,8)]
fib[-1]
fib < 10
fib[fib < 10]
years <- c(1960,1964,1976,1994)
names(years) <- c("Kenndey","Johnson","Carter","Clinton")
years
Kenndey Johnson Carter Clinton
years["Carter"]
years[c("Carter","Clinton")]
v <- c(11,12,13,14,15)
w <- c(1,2,3,4,5)
v+w
v-w
v*w
v/w
v^w
w-mean(w)
cv <- function(x) sd(x)/mean(x)
x <- c(1:10)
cv(x)
cv(1:10)
gcd <- function(a,b) {
+ if (b == 0) return(a)
+ else return(gcd(b, a %% b))
+ }
+ }
gcd <- function(a,b) {
if (b == 0) return(a)
else return(gcd(b, a %% b))
}
gcd(8,2)
getwd()
setwd("Rtest")
setwd ("Rtest")
getwd ()
getwd ()
setwd ("Rtest")
디렉토리 만들기 > Rtest
setwd ("Rtest")
setwd ("Rtest")
setwd ("Rtest")
getwd()
setwd("Rtest")
setwd ("Rtest")
getwd ()
getwd ()
getwd()
getwd()
#R의 작업공간 저장
save.image()
getwd ()
search()
#패키지에 있는 함수를 사용할 수 없는 경우
library(MASS)
detach(package:MASS)
require(doBy)
require(doBy)
require(doBy)
require(doBy)
require(doBy)
search()
#패키지에 있는 함수를 사용할 수 없는 경우
library(MASS)
detach(package:MASS)
require(doBy)
detach(package:MASS)
detach(package:MASS)
#패키지에 있는 함수를 사용할 수 없는 경우
library(MASS)
detach(package:MASS)
require(doBy)
detach(package:MASS)
require(MASS)
require(MASS)
search()
#패키지에 있는 함수를 사용할 수 없는 경우
library(MASS)
detach(package:MASS)
require(MASS)
require(doBy)
head(pressure)
help(pressure)
data()
head(Cars93)
library(MASS)
head(Cars93)
head(Cars93)
#컴퓨터에 설치된 패키지 목록
library()
installed.packages()[,c("Package", "Version")]
source("fibo3.R")
source("fibo3.R")
source("fibo3.R")
fibo <- function(n){
if (n == 1 || n == 2) {
return(1)
}else{
return(fibo(n-1)+fibo(n-2))
}
}
x <- fibo(3)
print(x)
source("fibo3.R")
source("fibo3")
source("fibo3.r")
fibo <- function(n){
if (n == 1 || n == 2) {
return(1)
}else{
return(fibo(n-1)+fibo(n-2))
}
}
x <- fibo(3)
print(x)
source("fibo3.R")
source("fibo3.r")
source("C:\Users\ykh98\OneDrive\바탕 화면\R_Studio\Day01\fibo3.r")
source("Day01\fibo3.r")
source("Day01\fibo3.r")
fibo <- function(n){
if (n == 1 || n == 2) {
return(1)
}else{
return(fibo(n-1)+fibo(n-2))
}
}
x <- fibo(3)
print(x)
source("fibo3.R")
source("/Day01/fibo3.R")
source("./Day01/fibo3.R")
source("./Day01/fibo3.R")
#변수, 자료형
Data(a, b, c =3, d=4)
Data(1,2)
#변수, 자료형
Data(a, b, c =3, d=4)
#변수, 자료형
a<-3, b<<-3,c=3
#변수, 자료형
a<-3
#변수, 자료형
a<-3
b<<-3
c=3
Data(a, b, c =3, d=4)
d<-4
Data(a, b, c =3, d=4)
Data(1,2)
Data(a, b, c =3, d=4)
#변수, 자료형
install.packages("dplyr")  # 패키지 설치
library(dplyr)            # 패키지 로드
#변수, 자료형
install.packages("dplyr")  # 패키지 설치
library(dplyr)            # 패키지 로드
Data(a, b, c =3, d=4)
library(dplyr)            # 패키지 로드
#변수, 자료형
install.packages("dplyr")  # 패키지 설치
library(dplyr)            # 패키지 로드
